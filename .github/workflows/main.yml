name: Build and Package with PyInstaller

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-package:
    name: Build and Package
    runs-on: windows-latest
    environment: DAui

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Cache Python Dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: python-dependencies-${{ hashFiles('**/requirements.txt') }}
          restore-keys: python-dependencies-

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Embed OPEN_AI_KEY and Build with PyInstaller
        run: |
          $Env:OPEN_AI_KEY = "${{ secrets.OPEN_AI_KEY }}"
          echo "OPEN_AI_KEY=$Env:OPEN_AI_KEY" > .env
          pyinstaller --onefile --windowed --name DreamAssist `
            --add-data "Assets/Favicon.ico;Assets" `
            --add-data "Assets/Cjet.bmp;Assets" `
            --add-data ".env;." TUI.py
        shell: pwsh

      - name: Copy NSIS Script
        run: cp .github/workflows/installer.nsi "${{ github.workspace }}/installer.nsi"
        shell: pwsh

      - name: Check NSIS Installation
        run: |
          if (-not (Test-Path ${{ secrets.NSIS_PATH }})) {
            Write-Host "NSIS not found at ${{ secrets.NSIS_PATH }}. Exiting..."
            exit 1
          }
        shell: pwsh

      - name: Compile Installer
        run: ${{ secrets.NSIS_PATH }} "${{ github.workspace }}/installer.nsi" -Wait
        shell: pwsh

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Packaged-App-${{ github.run_id }}
          path: dist/
